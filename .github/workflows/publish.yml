name: Publish Package

on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: write
  id-token: write

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2

      - name: Ensure latest npm
        run: npm i -g npm@latest

      - name: Derive version from release tag
        id: ver
        run: |
          TAG="${{ github.event.release.tag_name }}"
          if [ -z "$TAG" ]; then
            echo "No tag_name on this event"; exit 1
          fi
          VERSION="${TAG#v}"
          if ! echo "$VERSION" | grep -Eq '^[0-9]+\.[0-9]+\.[0-9]+'; then
            echo "Tag doesn't look like semver: $TAG"; exit 1
          fi
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Update package.json version
        run: |
          npm version "${{ steps.ver.outputs.version }}" --no-git-tag-version

      - name: Commit and push updated package.json
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add package.json package-lock.json 2>/dev/null || true
          if git diff --cached --quiet; then
            echo "No version changes to commit."
          else
            git commit -m "chore: bump version to ${{ steps.ver.outputs.version }} [skip ci]"
            git push
          fi

      - name: Install deps
        run: bun i

      - name: Build
        run: bun tsup

      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm publish --provenance --access public
